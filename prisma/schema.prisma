// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoriteIds    String[]  @db.ObjectId

  accounts     Account[]
  eventons     Eventos[]
  confirmacoes Confirmacoes[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Eventos {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  imageSrc       String
  created_at     DateTime @default(now())
  category       String
  local          String
  cidade         String
  endereco       String
  numPessoas     Int
  numConfirmados Int
  data           DateTime
  horario        DateTime
  preco          Int
  userId         String   @db.ObjectId

  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  confirmacoes Confirmacoes[]
}

model Confirmacoes {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  eventosId  String   @db.ObjectId
  dataEvento DateTime
  preco      Int
  created_at DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventos Eventos @relation(fields: [eventosId], references: [id], onDelete: Cascade)
}
